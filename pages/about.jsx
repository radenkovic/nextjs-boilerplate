import Head from "next/head";
import Sample from "components/Sample";
import client from "api/client";
import { useQuery } from "react-query";
import AppLayout from "components/AppLayout";
import jwt from "jsonwebtoken";

const getPosts = () => client.get("/todos");

export async function getServerSideProps({ req }) {
  const response = { props: {} };
  const { jwt: token } = req.cookies; // Read JWT from cookie called 'jwt'
  // If JWT exists it means logged in
  if (!token) {
    response.redirect = {
      permanent: false,
      destination: "/login",
    };
  } else {
    // Decode the token and validate
    try {
      const user = jwt.decode(token);
      console.log({ "decoded user": user });
    } catch (e) {
      console.log("Token not valid");
      response.redirect = {
        permanent: false,
        destination: "/login",
      };
    }
  }
  return response;
}

export default function Home() {
  const { data } = useQuery("posts", getPosts, { placeholderData: [] });

  return (
    <AppLayout>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="text-3xl">ABOUT</div>
      {data.map((item) => (
        <div key={item.id}>{item.title}</div>
      ))}
      <Sample />
    </AppLayout>
  );
}
